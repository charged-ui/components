"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const p=require("lit"),e=require("./vendor.cjs"),c=require("./registry-Bpi-HjGd.cjs"),d=require("./cobe.cjs"),b="*,::backdrop,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#3b82f680;--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.static{position:static}.relative{position:relative}.block{display:block}.hidden{display:none}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}";var w=Object.defineProperty,f=Object.getOwnPropertyDescriptor,t=(h,i,s,r)=>{for(var o=r>1?void 0:r?f(i,s):i,n=h.length-1,a;n>=0;n--)(a=h[n])&&(o=(r?a(i,s,o):a(o))||o);return r&&o&&w(i,s,o),o};exports.UIGlobe=class extends p.LitElement{constructor(){super(...arguments),this.phi=0,this.theta=0,this.autoRotateSpeed=.01,this.dark=1,this.diffuse=1.2,this.mapSamples=8e3,this.mapBrightness=6,this.baseColor=[.3,.3,.3],this.markerColor=[.1,.8,1],this.glowColor=[1,1,1],this.aspectRatio=1,this.scale=1,this.offset=[0,0],this.size=400,this.markers=[],this.globe=null,this.animationPhi=0,this.containerWidth=0,this.containerHeight=0,this.scaledOffset=[0,0]}firstUpdated(){this.updateSizeStyles(),this.updateAspectRatio(),this.updateContainerSize(),this.initializeGlobe(),this.setupResizeObserver(),setTimeout(()=>{this.canvas&&(this.canvas.style.opacity="1")},100)}updated(i){i.has("size")&&(this.updateSizeStyles(),this.updateContainerSize()),i.has("aspectRatio")&&this.updateAspectRatio(),i.has("offset")&&this.updateContainerSize()}disconnectedCallback(){var i,s;super.disconnectedCallback(),this.globe&&((s=(i=this.globe).destroy)==null||s.call(i))}updateSizeStyles(){this.size>0?(this.style.setProperty("--globe-size",`${this.size}px`),this.style.setProperty("--globe-max-size",`${this.size}px`)):(this.style.removeProperty("--globe-size"),this.style.removeProperty("--globe-max-size"))}updateAspectRatio(){this.style.setProperty("--aspect-ratio",this.aspectRatio.toString())}updateContainerSize(){if(!this.container)return;const i=this.container.getBoundingClientRect();if(this.containerWidth=i.width,this.containerHeight=i.height,this.size>0){const s=this.containerWidth/this.size;let r=this.offset[0]*s,o=this.offset[1]*s;const n=this.size/this.aspectRatio;this.offset[0]/this.size,this.offset[1]/n;const a=this.containerWidth*.9,l=this.containerHeight*.9;Math.abs(o)>l&&(o=Math.sign(o)*l),Math.abs(r)>a&&(r=Math.sign(r)*a),this.scaledOffset=[r,o]}else this.scaledOffset=[...this.offset]}setupResizeObserver(){if(typeof ResizeObserver>"u")return;new ResizeObserver(()=>{this.updateContainerSize()}).observe(this.container)}initializeGlobe(){!this.canvas||!this.containerWidth||!this.containerHeight||(this.animationPhi=this.phi,this.globe=d.p(this.canvas,{devicePixelRatio:2,width:this.containerWidth*2,height:this.containerHeight*2,phi:this.phi,theta:this.theta,dark:this.dark,diffuse:this.diffuse,mapSamples:this.mapSamples,mapBrightness:this.mapBrightness,baseColor:this.baseColor,markerColor:this.markerColor,glowColor:this.glowColor,markers:this.markers,scale:this.scale,offset:this.scaledOffset,onRender:i=>{this.animationPhi+=this.autoRotateSpeed,i.phi=this.animationPhi,i.theta=this.theta,i.width=this.containerWidth*2,i.height=this.containerHeight*2}}))}render(){return p.html`
      <div class="globe-container">
        <canvas></canvas>
        <slot name="overlay"></slot>
      </div>
    `}};exports.UIGlobe.styles=p.css`
    ${p.unsafeCSS(b)}
    :host {
      display: block;
      width: var(--globe-size, 100%);
      min-width: 200px;
      max-width: var(--globe-max-size, 800px);
      /* Ensure the component itself can scale down */
      max-width: min(var(--globe-max-size, 800px), 100vw);
    }

    .globe-container {
      position: relative;
      width: 100%;
      aspect-ratio: var(--aspect-ratio, 1);
      overflow: hidden;
    }

    canvas {
      display: block;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity 1s ease;
      contain: layout paint size;
    }
  `;t([e.n({type:Number})],exports.UIGlobe.prototype,"phi",2);t([e.n({type:Number})],exports.UIGlobe.prototype,"theta",2);t([e.n({type:Number,attribute:"auto-rotate-speed"})],exports.UIGlobe.prototype,"autoRotateSpeed",2);t([e.n({type:Number})],exports.UIGlobe.prototype,"dark",2);t([e.n({type:Number})],exports.UIGlobe.prototype,"diffuse",2);t([e.n({type:Number,attribute:"map-samples"})],exports.UIGlobe.prototype,"mapSamples",2);t([e.n({type:Number,attribute:"map-brightness"})],exports.UIGlobe.prototype,"mapBrightness",2);t([e.n({type:Array,attribute:"base-color"})],exports.UIGlobe.prototype,"baseColor",2);t([e.n({type:Array,attribute:"marker-color"})],exports.UIGlobe.prototype,"markerColor",2);t([e.n({type:Array,attribute:"glow-color"})],exports.UIGlobe.prototype,"glowColor",2);t([e.n({type:Number,attribute:"aspect-ratio"})],exports.UIGlobe.prototype,"aspectRatio",2);t([e.n({type:Number})],exports.UIGlobe.prototype,"scale",2);t([e.n({type:Array})],exports.UIGlobe.prototype,"offset",2);t([e.n({type:Number})],exports.UIGlobe.prototype,"size",2);t([e.n({type:Array})],exports.UIGlobe.prototype,"markers",2);t([e.r()],exports.UIGlobe.prototype,"globe",2);t([e.r()],exports.UIGlobe.prototype,"animationPhi",2);t([e.r()],exports.UIGlobe.prototype,"containerWidth",2);t([e.r()],exports.UIGlobe.prototype,"containerHeight",2);t([e.r()],exports.UIGlobe.prototype,"scaledOffset",2);t([e.e("canvas")],exports.UIGlobe.prototype,"canvas",2);t([e.e(".globe-container")],exports.UIGlobe.prototype,"container",2);exports.UIGlobe=t([c.chargedCustomElement("ui-globe")],exports.UIGlobe);
